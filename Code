import java.sql.*;
import java.util.Scanner;
public class EmployeeDBApp {
    private static final String URL = "jdbc:mysql://localhost:3306/staffdb";
    private static final String USER = "dharani";
    private static final String PASS = "password";
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        try (Connection conn = DriverManager.getConnection(URL, USER, PASS)) {
            System.out.println("Connected to database!");
            while (true) {
                System.out.println("\n--- Employee Database Menu ---");
                System.out.println("1. Add Employee");
                System.out.println("2. View Employees");
                System.out.println("3. Update Employee");
                System.out.println("4. Delete Employee");
                System.out.println("5. Exit");
                System.out.print("Choose an option: ");
                int choice = sc.nextInt();
                switch (choice) {
                    case 1: addEmployee(conn, sc); break;
                    case 2: viewEmployees(conn); break;
                    case 3: updateEmployee(conn, sc); break;
                    case 4: deleteEmployee(conn, sc); break;
                    case 5: System.out.println("Exiting..."); sc.close(); return;
                    default: System.out.println("Invalid choice!");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private static void addEmployee(Connection conn, Scanner sc) throws SQLException {
        System.out.print("Enter name: ");
        sc.nextLine(); // consume newline
        String name = sc.nextLine();
        System.out.print("Enter salary: ");
        double salary = sc.nextDouble();
        String sql = "INSERT INTO employees (name, salary) VALUES (?, ?)";
        try (PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setString(1, name);
            pst.setDouble(2, salary);
            int rows = pst.executeUpdate();
            System.out.println(rows > 0 ? "Employee added!" : "Failed to add employee.");
        }
    }
    private static void viewEmployees(Connection conn) throws SQLException {
        String sql = "SELECT * FROM employees";
        try (Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            System.out.println("\n--- Employee List ---");
            while (rs.next()) {
                System.out.println(rs.getInt("id") + " | " +
                                   rs.getString("name") + " | " +
                                   rs.getDouble("salary"));
            }
        }
    }
    private static void updateEmployee(Connection conn, Scanner sc) throws SQLException {
        System.out.print("Enter employee ID to update: ");
        int id = sc.nextInt();
        System.out.print("Enter new salary: ");
        double salary = sc.nextDouble();
        String sql = "UPDATE employees SET salary = ? WHERE id = ?";
        try (PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setDouble(1, salary);
            pst.setInt(2, id);
            int rows = pst.executeUpdate();
            System.out.println(rows > 0 ? "Employee updated!" : "Employee not found.");
        }
    }
    private static void deleteEmployee(Connection conn, Scanner sc) throws SQLException {
        System.out.print("Enter employee ID to delete: ");
        int id = sc.nextInt();
        String sql = "DELETE FROM employees WHERE id = ?";
        try (PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setInt(1, id);
            int rows = pst.executeUpdate();
            System.out.println(rows > 0 ? "Employee deleted!" : "Employee not found.");
        }
    }
}
